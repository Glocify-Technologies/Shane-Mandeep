//
// PetProfile.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation


public struct PetProfile: Codable,Identifiable,Equatable {
    public static func == (lhs: PetProfile, rhs: PetProfile) -> Bool {
        return lhs.id == rhs.id && lhs._id == rhs._id && lhs.profileName == rhs.profileName && lhs.petName == rhs.petName && lhs.userId == rhs.userId  && lhs.breed == rhs.breed && lhs.age == rhs.age && lhs.gender == rhs.gender && lhs._description == rhs._description && lhs.createdAt == rhs.createdAt && lhs.updatedAt == rhs.updatedAt && lhs.isShow == rhs.isShow
    }
    
   
    public let id = UUID()
    public var _id: Int?
    public var profileName: String?
    public var petName: String?
    public var userId: String?
    public var breed: String?
    public var age: String?
    public var gender: String?
    public var _description: String?
    public var createdAt: String?
    public var updatedAt: String?
    public var treatment: [Treatment]?
    public var isShow = false
    
 
    public init(_id: Int?, profileName: String?, petName: String?, userId: String?, breed: String?, age: String?, gender: String?, _description: String?, createdAt: String?, updatedAt: String?, treatment: [Treatment]?) {
        self._id = _id
        self.profileName = profileName
        self.petName = petName
        self.userId = userId
        self.breed = breed
        self.age = age
        self.gender = gender
        self._description = _description
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.treatment = treatment
        
    }

    public enum CodingKeys: String, CodingKey { 
        case _id = "id"
        case profileName = "profile_name"
        case petName = "pet_name"
        case userId = "user_id"
        case breed
        case age
        case gender
        case _description = "description"
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case treatment
    }


}

