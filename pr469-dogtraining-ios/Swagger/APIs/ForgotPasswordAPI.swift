//
// ForgotPasswordAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class ForgotPasswordAPI {
    /**
     Reset Password
     
     - parameter accept: (header) &#x60;application/json&#x60; 
     - parameter email: (form) Email 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func forgotpasswordPostResetPassword(accept: String, email: String, completion: @escaping ((_ data: SuccessResponse?,_ error: Error?) -> Void)) {
        forgotpasswordPostResetPasswordWithRequestBuilder(accept: accept, email: email).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Reset Password
     - POST /password/email
     - 
     - API Key:
       - type: apiKey x-api-key 
       - name: apiKey
     - examples: [{contentType=application/json, example={"empty": false}}]
     
     - parameter accept: (header) &#x60;application/json&#x60; 
     - parameter email: (form) Email 

     - returns: RequestBuilder<SuccessResponse> 
     */
    open class func forgotpasswordPostResetPasswordWithRequestBuilder(accept: String, email: String) -> RequestBuilder<SuccessResponse> {
        let path = "/password/email"
        let URLString = SwaggerClientAPI.basePath + path
        let formParams: [String:Any?] = [
            "email": email
        ]

        let nonNullParameters = APIHelper.rejectNil(formParams)
        let parameters = APIHelper.convertBoolToString(nonNullParameters)
        
        let url = URLComponents(string: URLString)
        let nillableHeaders: [String: Any?] = [
            "Accept": accept
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<SuccessResponse>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

}
